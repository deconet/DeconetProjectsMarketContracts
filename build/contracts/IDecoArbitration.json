{
  "contractName": "IDecoArbitration",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "idHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "respondentShareProposal",
          "type": "int256"
        }
      ],
      "name": "LogStartedDispute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "idHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "rejectedProposal",
          "type": "uint8"
        }
      ],
      "name": "LogRejectedProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "idHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "respondentShare",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "initiatorShare",
          "type": "uint8"
        }
      ],
      "name": "LogSettledDispute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "fixedFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "shareFee",
          "type": "uint8"
        }
      ],
      "name": "LogFeesUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "proposalActionTimeLimit",
          "type": "uint256"
        }
      ],
      "name": "LogProposalTimeLimitUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "newWithdrawalAddress",
          "type": "address"
        }
      ],
      "name": "LogWithdrawalAddressChanged",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_idHash",
          "type": "bytes32"
        },
        {
          "name": "_respondent",
          "type": "address"
        },
        {
          "name": "_respondentShareProposal",
          "type": "int256"
        }
      ],
      "name": "startDispute",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_idHash",
          "type": "bytes32"
        }
      ],
      "name": "acceptProposal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_idHash",
          "type": "bytes32"
        }
      ],
      "name": "rejectProposal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_idHash",
          "type": "bytes32"
        },
        {
          "name": "_respondentShare",
          "type": "uint256"
        },
        {
          "name": "_initiatorShare",
          "type": "uint256"
        }
      ],
      "name": "settleDispute",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getWithdrawalAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFixedAndShareFees",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTimeLimitForReplyOnProposal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity 0.4.25;\n\n\n/// @title Interface that an arbitration contract is expected to conform.\ninterface IDecoArbitration {\n\n    /**\n     * @dev Should be logged upon dispute start.\n     */\n    event LogStartedDispute(\n        address indexed sender,\n        bytes32 indexed idHash,\n        uint timestamp,\n        int respondentShareProposal\n    );\n\n    /**\n     * @dev Should be logged upon proposal rejection.\n     */\n    event LogRejectedProposal(\n        address indexed sender,\n        bytes32 indexed idHash,\n        uint timestamp,\n        uint8 rejectedProposal\n    );\n\n    /** \n     * @dev Should be logged upon dispute settlement.\n     */\n    event LogSettledDispute(\n        address indexed sender,\n        bytes32 indexed idHash,\n        uint timestamp,\n        uint8 respondentShare,\n        uint8 initiatorShare\n    );\n\n    /**\n     * @dev Should be logged when contract owner updates fees.\n     */\n    event LogFeesUpdated(\n        uint timestamp,\n        uint fixedFee,\n        uint8 shareFee\n    );\n\n    /**\n     * @dev Should be logged when time limit to accept/reject proposal for respondent is updated.\n     */\n    event LogProposalTimeLimitUpdated(\n        uint timestamp,\n        uint proposalActionTimeLimit\n    );\n\n    /**\n     * @dev Should be logged when the withdrawal address for the contract owner changed.\n     */\n    event LogWithdrawalAddressChanged(\n        uint timestamp,\n        address newWithdrawalAddress\n    );\n\n    /**\n     * @notice Start dispute for the given project.\n     * @dev This call should log event and save dispute information and notify `IDecoArbitrationTarget` object\n     *      about started dispute. Dipsute can be started only if target instance call of\n     *      `canStartDispute` method confirms that state is valid. Also, txn sender and respondent addresses\n     *      eligibility must be confirmed by arbitation target `checkEligibility` method call.\n     * @param _idHash A `bytes32` hash of a project id.\n     * @param _respondent An `address` of the second paty involved in the dispute.\n     * @param _respondentShareProposal An `int` value indicating percentage of disputed funds \n     *  proposed to the respondent. Valid values range is 0-100, different values are considered as 'No Proposal'.\n     *  When provided percentage is 100 then this dispute is processed automatically,\n     *  and all funds are distributed in favor of the respondent.\n     */\n    function startDispute(bytes32 _idHash, address _respondent, int _respondentShareProposal) external;\n\n    /**\n     * @notice Accept active dispute proposal, sender should be the respondent.\n     * @dev Respondent of a dispute can accept existing proposal and if proposal exists then `settleDispute`\n     *      method should be called with proposal value. Time limit for respondent to accept/reject proposal\n     *      must not be exceeded.\n     * @param _idHash A `bytes32` hash of a project id.\n     */\n    function acceptProposal(bytes32 _idHash) external;\n\n    /**\n     * @notice Reject active dispute proposal and escalate dispute.\n     * @dev Txn sender should be dispute's respondent. Dispute automatically gets escalated to this contract\n     *      owner aka arbiter. Proposal must exist, otherwise this method should do nothing. When respondent\n     *      rejects proposal then it should get removed and corresponding event should be logged.\n     *      There should be a time limit for a respondent to reject a given proposal, and if it is overdue\n     *      then arbiter should take on a dispute to settle it.\n     * @param _idHash A `bytes32` hash of a project id.\n     */\n    function rejectProposal(bytes32 _idHash) external;\n\n    /**\n     * @notice Settle active dispute.\n     * @dev Sender should be the current contract or its owner(arbiter). Action is possible only when there is no active\n     *      proposal or time to accept the proposal is over. Sum of shares should be 100%. Should notify target\n     *      instance about a dispute settlement via `disputeSettledTerminate` method call. Also corresponding\n     *      event must be emitted.\n     * @param _idHash A `bytes32` hash of a project id.\n     * @param _respondentShare An `uint` percents of respondent share.\n     * @param _initiatorShare An `uint` percents of initiator share.\n     */\n    function settleDispute(bytes32 _idHash, uint _respondentShare, uint _initiatorShare) external;\n\n    /** \n     * @return Retuns this arbitration contract withdrawal `address`.\n     */\n    function getWithdrawalAddress() external view returns(address);\n\n    /** \n     * @return The arbitration contract fixed `uint` fee and `uint8` share of all disputed funds fee. \n     */\n    function getFixedAndShareFees() external view returns(uint, uint8);\n\n    /**\n     * @return An `uint` time limit for accepting/rejecting a proposal by respondent.\n     */\n    function getTimeLimitForReplyOnProposal() external view returns(uint);\n\n}\n",
  "sourcePath": "/Users/chris/Documents/WorkStuff/Deconet/Blockchain/DeconetProjectsMarketContracts/contracts/IDecoArbitration.sol",
  "ast": {
    "absolutePath": "/Users/chris/Documents/WorkStuff/Deconet/Blockchain/DeconetProjectsMarketContracts/contracts/IDecoArbitration.sol",
    "exportedSymbols": {
      "IDecoArbitration": [
        5398
      ]
    },
    "id": 5399,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5300,
        "literals": [
          "solidity",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title Interface that an arbitration contract is expected to conform.",
        "fullyImplemented": false,
        "id": 5398,
        "linearizedBaseContracts": [
          5398
        ],
        "name": "IDecoArbitration",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev Should be logged upon dispute start.",
            "id": 5310,
            "name": "LogStartedDispute",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5302,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 5310,
                  "src": "232:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "232:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5304,
                  "indexed": true,
                  "name": "idHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5310,
                  "src": "264:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5303,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "264:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5306,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 5310,
                  "src": "296:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5305,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "296:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5308,
                  "indexed": false,
                  "name": "respondentShareProposal",
                  "nodeType": "VariableDeclaration",
                  "scope": 5310,
                  "src": "320:27:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 5307,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "320:3:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "222:131:9"
            },
            "src": "199:155:9"
          },
          {
            "anonymous": false,
            "documentation": "@dev Should be logged upon proposal rejection.",
            "id": 5320,
            "name": "LogRejectedProposal",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5312,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 5320,
                  "src": "465:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5314,
                  "indexed": true,
                  "name": "idHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5320,
                  "src": "497:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5313,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "497:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5316,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 5320,
                  "src": "529:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5315,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "529:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5318,
                  "indexed": false,
                  "name": "rejectedProposal",
                  "nodeType": "VariableDeclaration",
                  "scope": 5320,
                  "src": "553:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 5317,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "455:126:9"
            },
            "src": "430:152:9"
          },
          {
            "anonymous": false,
            "documentation": "@dev Should be logged upon dispute settlement.",
            "id": 5332,
            "name": "LogSettledDispute",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5322,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 5332,
                  "src": "692:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5324,
                  "indexed": true,
                  "name": "idHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5332,
                  "src": "724:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5323,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5326,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 5332,
                  "src": "756:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5325,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "756:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5328,
                  "indexed": false,
                  "name": "respondentShare",
                  "nodeType": "VariableDeclaration",
                  "scope": 5332,
                  "src": "780:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 5327,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5330,
                  "indexed": false,
                  "name": "initiatorShare",
                  "nodeType": "VariableDeclaration",
                  "scope": 5332,
                  "src": "811:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 5329,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "811:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "682:155:9"
            },
            "src": "659:179:9"
          },
          {
            "anonymous": false,
            "documentation": "@dev Should be logged when contract owner updates fees.",
            "id": 5340,
            "name": "LogFeesUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5334,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 5340,
                  "src": "953:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5333,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "953:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5336,
                  "indexed": false,
                  "name": "fixedFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 5340,
                  "src": "977:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5335,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5338,
                  "indexed": false,
                  "name": "shareFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 5340,
                  "src": "1000:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 5337,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1000:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "943:77:9"
            },
            "src": "923:98:9"
          },
          {
            "anonymous": false,
            "documentation": "@dev Should be logged when time limit to accept/reject proposal for respondent is updated.",
            "id": 5346,
            "name": "LogProposalTimeLimitUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5342,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 5346,
                  "src": "1184:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5341,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1184:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5344,
                  "indexed": false,
                  "name": "proposalActionTimeLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 5346,
                  "src": "1208:28:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5343,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1174:68:9"
            },
            "src": "1141:102:9"
          },
          {
            "anonymous": false,
            "documentation": "@dev Should be logged when the withdrawal address for the contract owner changed.",
            "id": 5352,
            "name": "LogWithdrawalAddressChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5348,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 5352,
                  "src": "1397:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5347,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1397:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5350,
                  "indexed": false,
                  "name": "newWithdrawalAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5352,
                  "src": "1421:28:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1387:68:9"
            },
            "src": "1354:102:9"
          },
          {
            "body": null,
            "documentation": "@notice Start dispute for the given project.\n@dev This call should log event and save dispute information and notify `IDecoArbitrationTarget` object\n     about started dispute. Dipsute can be started only if target instance call of\n     `canStartDispute` method confirms that state is valid. Also, txn sender and respondent addresses\n     eligibility must be confirmed by arbitation target `checkEligibility` method call.\n@param _idHash A `bytes32` hash of a project id.\n@param _respondent An `address` of the second paty involved in the dispute.\n@param _respondentShareProposal An `int` value indicating percentage of disputed funds \n proposed to the respondent. Valid values range is 0-100, different values are considered as 'No Proposal'.\n When provided percentage is 100 then this dispute is processed automatically,\n and all funds are distributed in favor of the respondent.",
            "id": 5361,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "startDispute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5354,
                  "name": "_idHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5361,
                  "src": "2458:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5353,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2458:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5356,
                  "name": "_respondent",
                  "nodeType": "VariableDeclaration",
                  "scope": 5361,
                  "src": "2475:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2475:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5358,
                  "name": "_respondentShareProposal",
                  "nodeType": "VariableDeclaration",
                  "scope": 5361,
                  "src": "2496:28:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 5357,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "2496:3:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2457:68:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 5360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2534:0:9"
            },
            "scope": 5398,
            "src": "2436:99:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Accept active dispute proposal, sender should be the respondent.\n@dev Respondent of a dispute can accept existing proposal and if proposal exists then `settleDispute`\n     method should be called with proposal value. Time limit for respondent to accept/reject proposal\n     must not be exceeded.\n@param _idHash A `bytes32` hash of a project id.",
            "id": 5366,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "acceptProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5363,
                  "name": "_idHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5366,
                  "src": "2969:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5362,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2969:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2968:17:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 5365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2994:0:9"
            },
            "scope": 5398,
            "src": "2945:50:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Reject active dispute proposal and escalate dispute.\n@dev Txn sender should be dispute's respondent. Dispute automatically gets escalated to this contract\n     owner aka arbiter. Proposal must exist, otherwise this method should do nothing. When respondent\n     rejects proposal then it should get removed and corresponding event should be logged.\n     There should be a time limit for a respondent to reject a given proposal, and if it is overdue\n     then arbiter should take on a dispute to settle it.\n@param _idHash A `bytes32` hash of a project id.",
            "id": 5371,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "rejectProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5368,
                  "name": "_idHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5371,
                  "src": "3652:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5367,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3652:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3651:17:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 5370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3677:0:9"
            },
            "scope": 5398,
            "src": "3628:50:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Settle active dispute.\n@dev Sender should be the current contract or its owner(arbiter). Action is possible only when there is no active\n     proposal or time to accept the proposal is over. Sum of shares should be 100%. Should notify target\n     instance about a dispute settlement via `disputeSettledTerminate` method call. Also corresponding\n     event must be emitted.\n@param _idHash A `bytes32` hash of a project id.\n@param _respondentShare An `uint` percents of respondent share.\n@param _initiatorShare An `uint` percents of initiator share.",
            "id": 5380,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "settleDispute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5373,
                  "name": "_idHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5380,
                  "src": "4335:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5372,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4335:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5375,
                  "name": "_respondentShare",
                  "nodeType": "VariableDeclaration",
                  "scope": 5380,
                  "src": "4352:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5374,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4352:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5377,
                  "name": "_initiatorShare",
                  "nodeType": "VariableDeclaration",
                  "scope": 5380,
                  "src": "4375:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5376,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4375:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4334:62:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 5379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4405:0:9"
            },
            "scope": 5398,
            "src": "4312:94:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@return Retuns this arbitration contract withdrawal `address`.",
            "id": 5385,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getWithdrawalAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4528:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 5384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5383,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5385,
                  "src": "4553:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4553:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4552:9:9"
            },
            "scope": 5398,
            "src": "4499:63:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@return The arbitration contract fixed `uint` fee and `uint8` share of all disputed funds fee. ",
            "id": 5392,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getFixedAndShareFees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4717:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 5391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5388,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5392,
                  "src": "4742:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5387,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4742:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5390,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5392,
                  "src": "4748:5:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 5389,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4748:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4741:13:9"
            },
            "scope": 5398,
            "src": "4688:67:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@return An `uint` time limit for accepting/rejecting a proposal by respondent.",
            "id": 5397,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getTimeLimitForReplyOnProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4902:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 5396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5395,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5397,
                  "src": "4927:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5394,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4927:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4926:6:9"
            },
            "scope": 5398,
            "src": "4863:70:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 5399,
        "src": "100:4836:9"
      }
    ],
    "src": "0:4937:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/chris/Documents/WorkStuff/Deconet/Blockchain/DeconetProjectsMarketContracts/contracts/IDecoArbitration.sol",
    "exportedSymbols": {
      "IDecoArbitration": [
        5398
      ]
    },
    "id": 5399,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5300,
        "literals": [
          "solidity",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title Interface that an arbitration contract is expected to conform.",
        "fullyImplemented": false,
        "id": 5398,
        "linearizedBaseContracts": [
          5398
        ],
        "name": "IDecoArbitration",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev Should be logged upon dispute start.",
            "id": 5310,
            "name": "LogStartedDispute",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5302,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 5310,
                  "src": "232:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "232:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5304,
                  "indexed": true,
                  "name": "idHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5310,
                  "src": "264:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5303,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "264:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5306,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 5310,
                  "src": "296:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5305,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "296:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5308,
                  "indexed": false,
                  "name": "respondentShareProposal",
                  "nodeType": "VariableDeclaration",
                  "scope": 5310,
                  "src": "320:27:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 5307,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "320:3:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "222:131:9"
            },
            "src": "199:155:9"
          },
          {
            "anonymous": false,
            "documentation": "@dev Should be logged upon proposal rejection.",
            "id": 5320,
            "name": "LogRejectedProposal",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5312,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 5320,
                  "src": "465:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5314,
                  "indexed": true,
                  "name": "idHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5320,
                  "src": "497:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5313,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "497:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5316,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 5320,
                  "src": "529:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5315,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "529:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5318,
                  "indexed": false,
                  "name": "rejectedProposal",
                  "nodeType": "VariableDeclaration",
                  "scope": 5320,
                  "src": "553:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 5317,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "455:126:9"
            },
            "src": "430:152:9"
          },
          {
            "anonymous": false,
            "documentation": "@dev Should be logged upon dispute settlement.",
            "id": 5332,
            "name": "LogSettledDispute",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5322,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 5332,
                  "src": "692:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5324,
                  "indexed": true,
                  "name": "idHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5332,
                  "src": "724:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5323,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5326,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 5332,
                  "src": "756:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5325,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "756:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5328,
                  "indexed": false,
                  "name": "respondentShare",
                  "nodeType": "VariableDeclaration",
                  "scope": 5332,
                  "src": "780:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 5327,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5330,
                  "indexed": false,
                  "name": "initiatorShare",
                  "nodeType": "VariableDeclaration",
                  "scope": 5332,
                  "src": "811:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 5329,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "811:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "682:155:9"
            },
            "src": "659:179:9"
          },
          {
            "anonymous": false,
            "documentation": "@dev Should be logged when contract owner updates fees.",
            "id": 5340,
            "name": "LogFeesUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5334,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 5340,
                  "src": "953:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5333,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "953:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5336,
                  "indexed": false,
                  "name": "fixedFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 5340,
                  "src": "977:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5335,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5338,
                  "indexed": false,
                  "name": "shareFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 5340,
                  "src": "1000:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 5337,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1000:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "943:77:9"
            },
            "src": "923:98:9"
          },
          {
            "anonymous": false,
            "documentation": "@dev Should be logged when time limit to accept/reject proposal for respondent is updated.",
            "id": 5346,
            "name": "LogProposalTimeLimitUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5342,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 5346,
                  "src": "1184:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5341,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1184:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5344,
                  "indexed": false,
                  "name": "proposalActionTimeLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 5346,
                  "src": "1208:28:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5343,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1174:68:9"
            },
            "src": "1141:102:9"
          },
          {
            "anonymous": false,
            "documentation": "@dev Should be logged when the withdrawal address for the contract owner changed.",
            "id": 5352,
            "name": "LogWithdrawalAddressChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5348,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 5352,
                  "src": "1397:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5347,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1397:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5350,
                  "indexed": false,
                  "name": "newWithdrawalAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5352,
                  "src": "1421:28:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1387:68:9"
            },
            "src": "1354:102:9"
          },
          {
            "body": null,
            "documentation": "@notice Start dispute for the given project.\n@dev This call should log event and save dispute information and notify `IDecoArbitrationTarget` object\n     about started dispute. Dipsute can be started only if target instance call of\n     `canStartDispute` method confirms that state is valid. Also, txn sender and respondent addresses\n     eligibility must be confirmed by arbitation target `checkEligibility` method call.\n@param _idHash A `bytes32` hash of a project id.\n@param _respondent An `address` of the second paty involved in the dispute.\n@param _respondentShareProposal An `int` value indicating percentage of disputed funds \n proposed to the respondent. Valid values range is 0-100, different values are considered as 'No Proposal'.\n When provided percentage is 100 then this dispute is processed automatically,\n and all funds are distributed in favor of the respondent.",
            "id": 5361,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "startDispute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5354,
                  "name": "_idHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5361,
                  "src": "2458:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5353,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2458:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5356,
                  "name": "_respondent",
                  "nodeType": "VariableDeclaration",
                  "scope": 5361,
                  "src": "2475:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2475:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5358,
                  "name": "_respondentShareProposal",
                  "nodeType": "VariableDeclaration",
                  "scope": 5361,
                  "src": "2496:28:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 5357,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "2496:3:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2457:68:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 5360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2534:0:9"
            },
            "scope": 5398,
            "src": "2436:99:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Accept active dispute proposal, sender should be the respondent.\n@dev Respondent of a dispute can accept existing proposal and if proposal exists then `settleDispute`\n     method should be called with proposal value. Time limit for respondent to accept/reject proposal\n     must not be exceeded.\n@param _idHash A `bytes32` hash of a project id.",
            "id": 5366,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "acceptProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5363,
                  "name": "_idHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5366,
                  "src": "2969:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5362,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2969:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2968:17:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 5365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2994:0:9"
            },
            "scope": 5398,
            "src": "2945:50:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Reject active dispute proposal and escalate dispute.\n@dev Txn sender should be dispute's respondent. Dispute automatically gets escalated to this contract\n     owner aka arbiter. Proposal must exist, otherwise this method should do nothing. When respondent\n     rejects proposal then it should get removed and corresponding event should be logged.\n     There should be a time limit for a respondent to reject a given proposal, and if it is overdue\n     then arbiter should take on a dispute to settle it.\n@param _idHash A `bytes32` hash of a project id.",
            "id": 5371,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "rejectProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5368,
                  "name": "_idHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5371,
                  "src": "3652:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5367,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3652:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3651:17:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 5370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3677:0:9"
            },
            "scope": 5398,
            "src": "3628:50:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Settle active dispute.\n@dev Sender should be the current contract or its owner(arbiter). Action is possible only when there is no active\n     proposal or time to accept the proposal is over. Sum of shares should be 100%. Should notify target\n     instance about a dispute settlement via `disputeSettledTerminate` method call. Also corresponding\n     event must be emitted.\n@param _idHash A `bytes32` hash of a project id.\n@param _respondentShare An `uint` percents of respondent share.\n@param _initiatorShare An `uint` percents of initiator share.",
            "id": 5380,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "settleDispute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5373,
                  "name": "_idHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5380,
                  "src": "4335:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5372,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4335:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5375,
                  "name": "_respondentShare",
                  "nodeType": "VariableDeclaration",
                  "scope": 5380,
                  "src": "4352:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5374,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4352:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5377,
                  "name": "_initiatorShare",
                  "nodeType": "VariableDeclaration",
                  "scope": 5380,
                  "src": "4375:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5376,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4375:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4334:62:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 5379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4405:0:9"
            },
            "scope": 5398,
            "src": "4312:94:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@return Retuns this arbitration contract withdrawal `address`.",
            "id": 5385,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getWithdrawalAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4528:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 5384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5383,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5385,
                  "src": "4553:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4553:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4552:9:9"
            },
            "scope": 5398,
            "src": "4499:63:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@return The arbitration contract fixed `uint` fee and `uint8` share of all disputed funds fee. ",
            "id": 5392,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getFixedAndShareFees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4717:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 5391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5388,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5392,
                  "src": "4742:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5387,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4742:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5390,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5392,
                  "src": "4748:5:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 5389,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4748:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4741:13:9"
            },
            "scope": 5398,
            "src": "4688:67:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@return An `uint` time limit for accepting/rejecting a proposal by respondent.",
            "id": 5397,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getTimeLimitForReplyOnProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4902:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 5396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5395,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5397,
                  "src": "4927:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5394,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4927:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4926:6:9"
            },
            "scope": 5398,
            "src": "4863:70:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 5399,
        "src": "100:4836:9"
      }
    ],
    "src": "0:4937:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-02-27T21:10:54.547Z",
  "devdoc": {
    "methods": {
      "acceptProposal(bytes32)": {
        "details": "Respondent of a dispute can accept existing proposal and if proposal exists then `settleDispute`     method should be called with proposal value. Time limit for respondent to accept/reject proposal     must not be exceeded.",
        "params": {
          "_idHash": "A `bytes32` hash of a project id."
        }
      },
      "getFixedAndShareFees()": {
        "return": "The arbitration contract fixed `uint` fee and `uint8` share of all disputed funds fee. "
      },
      "getTimeLimitForReplyOnProposal()": {
        "return": "An `uint` time limit for accepting/rejecting a proposal by respondent."
      },
      "getWithdrawalAddress()": {
        "return": "Retuns this arbitration contract withdrawal `address`."
      },
      "rejectProposal(bytes32)": {
        "details": "Txn sender should be dispute's respondent. Dispute automatically gets escalated to this contract     owner aka arbiter. Proposal must exist, otherwise this method should do nothing. When respondent     rejects proposal then it should get removed and corresponding event should be logged.     There should be a time limit for a respondent to reject a given proposal, and if it is overdue     then arbiter should take on a dispute to settle it.",
        "params": {
          "_idHash": "A `bytes32` hash of a project id."
        }
      },
      "settleDispute(bytes32,uint256,uint256)": {
        "details": "Sender should be the current contract or its owner(arbiter). Action is possible only when there is no active     proposal or time to accept the proposal is over. Sum of shares should be 100%. Should notify target     instance about a dispute settlement via `disputeSettledTerminate` method call. Also corresponding     event must be emitted.",
        "params": {
          "_idHash": "A `bytes32` hash of a project id.",
          "_initiatorShare": "An `uint` percents of initiator share.",
          "_respondentShare": "An `uint` percents of respondent share."
        }
      },
      "startDispute(bytes32,address,int256)": {
        "details": "This call should log event and save dispute information and notify `IDecoArbitrationTarget` object     about started dispute. Dipsute can be started only if target instance call of     `canStartDispute` method confirms that state is valid. Also, txn sender and respondent addresses     eligibility must be confirmed by arbitation target `checkEligibility` method call.",
        "params": {
          "_idHash": "A `bytes32` hash of a project id.",
          "_respondent": "An `address` of the second paty involved in the dispute.",
          "_respondentShareProposal": "An `int` value indicating percentage of disputed funds  proposed to the respondent. Valid values range is 0-100, different values are considered as 'No Proposal'. When provided percentage is 100 then this dispute is processed automatically, and all funds are distributed in favor of the respondent."
        }
      }
    },
    "title": "Interface that an arbitration contract is expected to conform."
  },
  "userdoc": {
    "methods": {
      "acceptProposal(bytes32)": {
        "notice": "Accept active dispute proposal, sender should be the respondent."
      },
      "rejectProposal(bytes32)": {
        "notice": "Reject active dispute proposal and escalate dispute."
      },
      "settleDispute(bytes32,uint256,uint256)": {
        "notice": "Settle active dispute."
      },
      "startDispute(bytes32,address,int256)": {
        "notice": "Start dispute for the given project."
      }
    }
  }
}